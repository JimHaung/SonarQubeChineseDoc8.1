{"expireTime":9007200835323870000,"key":"transformer-remark-markdown-html-ast-04ac2dab6159fa91cbbaacfff2b947d4-gatsby-remark-custom-blocks-/SonarQubeChineseDoc8.1","val":{"type":"root","children":[{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Database","position":{"start":{"line":1,"column":4,"offset":3},"end":{"line":1,"column":12,"offset":11}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":12,"offset":11}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We recommend that for large instances, the database used by SonarQube is hosted on a machine which is physically separate from SonarQube Server but close to it on the network.","position":{"start":{"line":2,"column":1,"offset":12},"end":{"line":2,"column":176,"offset":187}}}],"position":{"start":{"line":2,"column":1,"offset":12},"end":{"line":2,"column":176,"offset":187}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Oracle","position":{"start":{"line":4,"column":5,"offset":193},"end":{"line":4,"column":11,"offset":199}}}],"position":{"start":{"line":4,"column":1,"offset":189},"end":{"line":4,"column":11,"offset":199}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In case your SonarQube Server is running on Linux and you are using Oracle, the Oracle JDBC Driver may be blocked due to /dev/random. See ","position":{"start":{"line":5,"column":1,"offset":200},"end":{"line":5,"column":139,"offset":338}}},{"type":"element","tagName":"a","properties":{"href":"http://www.usn-it.de/index.php/2009/02/20/oracle-11g-jdbc-driver-hangs-blocked-by-devrandom-entropy-pool-empty/"},"children":[{"type":"text","value":"this Oracle article","position":{"start":{"line":5,"column":140,"offset":339},"end":{"line":5,"column":159,"offset":358}}}],"position":{"start":{"line":5,"column":139,"offset":338},"end":{"line":5,"column":273,"offset":472}}},{"type":"text","value":" for more details about this problem.","position":{"start":{"line":5,"column":273,"offset":472},"end":{"line":5,"column":310,"offset":509}}}],"position":{"start":{"line":5,"column":1,"offset":200},"end":{"line":5,"column":310,"offset":509}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":" To avoid it, you may want to add this JVM parameter to your SonarQube Web Server (","position":{"start":{"line":7,"column":1,"offset":511},"end":{"line":7,"column":84,"offset":594}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"sonar.web.javaOpts"}],"position":{"start":{"line":7,"column":84,"offset":594},"end":{"line":7,"column":104,"offset":614}}},{"type":"text","value":") configuration :","position":{"start":{"line":7,"column":104,"offset":614},"end":{"line":7,"column":121,"offset":631}}}],"position":{"start":{"line":7,"column":1,"offset":511},"end":{"line":7,"column":121,"offset":631}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"-Djava.security.egd=file:///dev/urandom\n"}],"position":{"start":{"line":8,"column":1,"offset":632},"end":{"line":10,"column":5,"offset":682}}}],"position":{"start":{"line":8,"column":1,"offset":632},"end":{"line":10,"column":5,"offset":682}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Elasticsearch (ES)","position":{"start":{"line":12,"column":5,"offset":688},"end":{"line":12,"column":23,"offset":706}}}],"position":{"start":{"line":12,"column":1,"offset":684},"end":{"line":12,"column":23,"offset":706}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://www.elastic.co/"},"children":[{"type":"text","value":"Elasticsearch","position":{"start":{"line":13,"column":4,"offset":710},"end":{"line":13,"column":17,"offset":723}}}],"position":{"start":{"line":13,"column":3,"offset":709},"end":{"line":13,"column":43,"offset":749}}},{"type":"text","value":" is used by SonarQube in the background in the SearchServer process. To ensure good performance of your SonarQube, you need to follow these recommendations that are linked to ES usage.","position":{"start":{"line":13,"column":43,"offset":749},"end":{"line":13,"column":227,"offset":933}}}],"position":{"start":{"line":13,"column":1,"offset":707},"end":{"line":13,"column":227,"offset":933}}},{"type":"text","value":"\n"}],"position":{"start":{"line":13,"column":1,"offset":707},"end":{"line":13,"column":227,"offset":933}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"JVM","position":{"start":{"line":15,"column":5,"offset":939},"end":{"line":15,"column":8,"offset":942}}}],"position":{"start":{"line":15,"column":1,"offset":935},"end":{"line":15,"column":8,"offset":942}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"It is recommended to set the min and max memory to the same value to prevent the heap from resizing at runtime, a very costly process. See -Xms and  -Xmx of property ","position":{"start":{"line":16,"column":3,"offset":945},"end":{"line":16,"column":169,"offset":1111}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"sonar.search.javaOpts"}],"position":{"start":{"line":16,"column":169,"offset":1111},"end":{"line":16,"column":192,"offset":1134}}},{"type":"text","value":".","position":{"start":{"line":16,"column":192,"offset":1134},"end":{"line":16,"column":193,"offset":1135}}}],"position":{"start":{"line":16,"column":1,"offset":943},"end":{"line":16,"column":193,"offset":1135}}},{"type":"text","value":"\n"}],"position":{"start":{"line":16,"column":1,"offset":943},"end":{"line":16,"column":193,"offset":1135}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Disk","position":{"start":{"line":18,"column":5,"offset":1141},"end":{"line":18,"column":9,"offset":1145}}}],"position":{"start":{"line":18,"column":1,"offset":1137},"end":{"line":18,"column":9,"offset":1145}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Free disk space is an absolute requirement. ES implements a safety mechanism to prevent the disk from being flooded with index data that locks all indices in read-only mode when a 95% disk usage watermark is reached. For information on recovering from ES read-only indices, see the ","position":{"start":{"line":19,"column":3,"offset":1148},"end":{"line":19,"column":285,"offset":1430}}},{"type":"element","tagName":"a","properties":{"href":"/SonarQubeChineseDoc8.1/setup/troubleshooting/"},"children":[{"type":"text","value":"Troubleshooting","position":{"start":{"line":19,"column":286,"offset":1431},"end":{"line":19,"column":301,"offset":1446}}}],"position":{"start":{"line":19,"column":285,"offset":1430},"end":{"line":19,"column":327,"offset":1472}}},{"type":"text","value":" page.","position":{"start":{"line":19,"column":327,"offset":1472},"end":{"line":19,"column":333,"offset":1478}}}],"position":{"start":{"line":19,"column":1,"offset":1146},"end":{"line":19,"column":333,"offset":1478}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Disk can easily  become the bottleneck of ES. If you can afford SSDs, they are by far superior to any spinning media. SSD-backed nodes see boosts in both query and indexing performance. If you use spinning media, try to obtain the fastest disks possible (high performance server disks 15k RPM drives).","position":{"start":{"line":20,"column":3,"offset":1481},"end":{"line":20,"column":304,"offset":1782}}}],"position":{"start":{"line":20,"column":1,"offset":1479},"end":{"line":20,"column":304,"offset":1782}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Make sure to increase the number of open files descriptors on the machine (or for the user running SonarQube server). Setting it to 32k or even 64k is recommended. See ","position":{"start":{"line":21,"column":3,"offset":1785},"end":{"line":21,"column":171,"offset":1953}}},{"type":"element","tagName":"a","properties":{"href":"https://www.elastic.co/guide/en/elasticsearch/reference/current/file-descriptors.html"},"children":[{"type":"text","value":"this ElasticSearch article","position":{"start":{"line":21,"column":172,"offset":1954},"end":{"line":21,"column":198,"offset":1980}}}],"position":{"start":{"line":21,"column":171,"offset":1953},"end":{"line":21,"column":286,"offset":2068}}},{"type":"text","value":".","position":{"start":{"line":21,"column":286,"offset":2068},"end":{"line":21,"column":287,"offset":2069}}}],"position":{"start":{"line":21,"column":1,"offset":1783},"end":{"line":21,"column":287,"offset":2069}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Using RAID 0 is an effective way to increase disk speed, for both spinning disks and SSD. There is no need to use mirroring or parity variants of RAID because of Elasticsearch replicas and database primary storage.\n8 Do not use remote-mounted storage, such as NFS, SMB/CIFS or network-attached storages (NAS). They are often slower, display larger latencies with a wider deviation in average latency, and are a single point of failure.","position":{"start":{"line":22,"column":3,"offset":2072},"end":{"line":23,"column":221,"offset":2507}}}],"position":{"start":{"line":22,"column":1,"offset":2070},"end":{"line":23,"column":221,"offset":2507}}},{"type":"text","value":"\n"}],"position":{"start":{"line":19,"column":1,"offset":1146},"end":{"line":23,"column":221,"offset":2507}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Advanced","position":{"start":{"line":25,"column":3,"offset":2511},"end":{"line":25,"column":11,"offset":2519}}}],"position":{"start":{"line":25,"column":1,"offset":2509},"end":{"line":25,"column":13,"offset":2521}}}],"position":{"start":{"line":25,"column":1,"offset":2509},"end":{"line":25,"column":13,"offset":2521}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"If you are using SSD, make sure your OS I/O Scheduler is configured correctly. When you write data to disk, the I/O Scheduler decides when that data is actually sent to the disk. The default under most *nix distributions is a scheduler called cfq (Completely Fair Queuing). This scheduler allocates \"time slices\" to each process, and then optimizes the delivery of these various queues to the disk. It is optimized for spinning media: the nature of rotating platters means it is more efficient to write data to disk based on physical layout. This is very inefficient for SSD, however, since there are no spinning platters involved. Instead, deadline or noop should be used instead. The deadline scheduler optimizes based on how long writes have been pending, while noop is just a simple FIFO queue. This simple change can have dramatic impacts.","position":{"start":{"line":26,"column":3,"offset":2524},"end":{"line":26,"column":847,"offset":3368}}}],"position":{"start":{"line":26,"column":1,"offset":2522},"end":{"line":26,"column":847,"offset":3368}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"If SQ home directory is located on a slow disk, then the property ","position":{"start":{"line":27,"column":3,"offset":3371},"end":{"line":27,"column":69,"offset":3437}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"sonar.path.data"}],"position":{"start":{"line":27,"column":69,"offset":3437},"end":{"line":27,"column":86,"offset":3454}}},{"type":"text","value":" can be used to move data to a faster disk (RAID 0 local SSD for instance).","position":{"start":{"line":27,"column":86,"offset":3454},"end":{"line":27,"column":161,"offset":3529}}}],"position":{"start":{"line":27,"column":1,"offset":3369},"end":{"line":27,"column":161,"offset":3529}}},{"type":"text","value":"\n"}],"position":{"start":{"line":26,"column":1,"offset":2522},"end":{"line":27,"column":161,"offset":3529}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Memory","position":{"start":{"line":29,"column":5,"offset":3535},"end":{"line":29,"column":11,"offset":3541}}}],"position":{"start":{"line":29,"column":1,"offset":3531},"end":{"line":29,"column":11,"offset":3541}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Machine available memory for OS must be at least the Elasticsearch heap size. The reason is that Lucene (used by ES) is designed to leverage the underlying OS for caching in-memory data structures. That means that by default OS must have at least 1Gb of available memory.","position":{"start":{"line":30,"column":3,"offset":3544},"end":{"line":30,"column":274,"offset":3815}}}],"position":{"start":{"line":30,"column":1,"offset":3542},"end":{"line":30,"column":274,"offset":3815}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Don't allocate more than 32Gb. See ","position":{"start":{"line":31,"column":3,"offset":3818},"end":{"line":31,"column":38,"offset":3853}}},{"type":"element","tagName":"a","properties":{"href":"http://www.elasticsearch.org/guide/en/elasticsearch/guide/current/heap-sizing.html"},"children":[{"type":"text","value":"this ElasticSearch article","position":{"start":{"line":31,"column":39,"offset":3854},"end":{"line":31,"column":65,"offset":3880}}}],"position":{"start":{"line":31,"column":38,"offset":3853},"end":{"line":31,"column":150,"offset":3965}}},{"type":"text","value":" for more details.","position":{"start":{"line":31,"column":150,"offset":3965},"end":{"line":31,"column":168,"offset":3983}}}],"position":{"start":{"line":31,"column":1,"offset":3816},"end":{"line":31,"column":168,"offset":3983}}},{"type":"text","value":"\n"}],"position":{"start":{"line":30,"column":1,"offset":3542},"end":{"line":31,"column":168,"offset":3983}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Advanced","position":{"start":{"line":33,"column":3,"offset":3987},"end":{"line":33,"column":11,"offset":3995}}}],"position":{"start":{"line":33,"column":1,"offset":3985},"end":{"line":33,"column":13,"offset":3997}}}],"position":{"start":{"line":33,"column":1,"offset":3985},"end":{"line":33,"column":13,"offset":3997}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Elasticsearch uses a hybrid mmapfs / niofs directory by default to store its indices. The default operating system limits on mmap counts is likely to be too low, which may result in out of memory exceptions. On Linux, you can increase the limits by running the following command as root :","position":{"start":{"line":34,"column":3,"offset":4000},"end":{"line":34,"column":291,"offset":4288}}}],"position":{"start":{"line":34,"column":3,"offset":4000},"end":{"line":34,"column":291,"offset":4288}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"sysctl -w vm.max_map_count=262144\n"}],"position":{"start":{"line":35,"column":1,"offset":4289},"end":{"line":37,"column":4,"offset":4330}}}],"position":{"start":{"line":35,"column":1,"offset":4289},"end":{"line":37,"column":4,"offset":4330}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To set this value permanently, update the ","position":{"start":{"line":38,"column":1,"offset":4331},"end":{"line":38,"column":43,"offset":4373}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"vm.max_map_count"}],"position":{"start":{"line":38,"column":43,"offset":4373},"end":{"line":38,"column":61,"offset":4391}}},{"type":"text","value":" setting in ","position":{"start":{"line":38,"column":61,"offset":4391},"end":{"line":38,"column":73,"offset":4403}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"/etc/sysctl.conf"}],"position":{"start":{"line":38,"column":73,"offset":4403},"end":{"line":38,"column":91,"offset":4421}}},{"type":"text","value":".","position":{"start":{"line":38,"column":91,"offset":4421},"end":{"line":38,"column":92,"offset":4422}}}],"position":{"start":{"line":38,"column":1,"offset":4331},"end":{"line":38,"column":92,"offset":4422}}},{"type":"text","value":"\n"}],"position":{"start":{"line":34,"column":1,"offset":3998},"end":{"line":38,"column":92,"offset":4422}}},{"type":"text","value":"\n"}],"position":{"start":{"line":34,"column":1,"offset":3998},"end":{"line":38,"column":92,"offset":4422}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"CPU","position":{"start":{"line":40,"column":5,"offset":4428},"end":{"line":40,"column":8,"offset":4431}}}],"position":{"start":{"line":40,"column":1,"offset":4424},"end":{"line":40,"column":8,"offset":4431}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"If you need to choose between faster CPUs or more cores, then choose more cores. The extra concurrency that multiple cores offers will far outweigh a slightly faster clock-speed.","position":{"start":{"line":41,"column":3,"offset":4434},"end":{"line":41,"column":181,"offset":4612}}}],"position":{"start":{"line":41,"column":1,"offset":4432},"end":{"line":41,"column":181,"offset":4612}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"By nature data are distributed on multiples nodes, so execution time depends on the slowest node. It's better to have multiple medium boxes than one fast + one slow.","position":{"start":{"line":42,"column":3,"offset":4615},"end":{"line":42,"column":168,"offset":4780}}}],"position":{"start":{"line":42,"column":1,"offset":4613},"end":{"line":42,"column":168,"offset":4780}}},{"type":"text","value":"\n"}],"position":{"start":{"line":41,"column":1,"offset":4432},"end":{"line":42,"column":168,"offset":4780}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":43,"column":1,"offset":4781}}}}